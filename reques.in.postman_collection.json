{
	"info": {
		"_postman_id": "f85f7846-db60-4bfa-93fd-f4395032a634",
		"name": "reques.in",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32284116"
	},
	"item": [
		{
			"name": "Retrieve all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response is ok\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// Parse the response JSON data\r",
							"var responseData = pm.response.json().data;\r",
							"\r",
							"// Iterate over each key in the response data\r",
							"Object.keys(responseData).forEach(function(key) {\r",
							"    // Set environment variable dynamically\r",
							"    pm.collectionVariables.set(key, responseData[key]);\r",
							"});\r",
							"\r",
							"\r",
							" \r",
							"\r",
							"\r",
							"\r",
							"template = `\r",
							"<h3>Datas Retrived</h3>\r",
							"<center>\r",
							"<img src=\"{{response.data.avatar}}\"/>\r",
							"<table>\r",
							"<thead>\r",
							"<td>ID</td>\r",
							"<td>Email</td>\r",
							"<td>First Name</td>\r",
							"<td>Last Name</td>\r",
							"</thead>\r",
							"<tr>\r",
							"<td> {{response.data.id}}</td>\r",
							"<td>{{response.data.email}}</td>\r",
							"<td> {{response.data.first_name}}</td>\r",
							"<td>{{response.data.last_name}}</td>\r",
							"</tr>\r",
							"</table>\r",
							"</center>\r",
							"`\r",
							"pm.visualizer.set(template, {\r",
							"    response:pm.response.json()\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users/5",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create  user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"\r",
							"pm.test(\"Body contains string\",() => {\r",
							"  pm.expect(pm.response.text()).to.include(\"name\");\r",
							"  pm.expect(pm.response.text()).to.include(\"job\");\r",
							"});\r",
							"\r",
							"// * Response has the following structure:\r",
							"// {\r",
							"//   \"name\": \"Jane\",\r",
							"//   \"age\": 23\r",
							"// },\r",
							"// */\r",
							"pm.test(\"Person is bibek\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"bibek\");\r",
							"  pm.expect(responseJson.age).to.eql(20);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"name\": \"Bibek\",\r\n        \"job\": \"Leader\",\r\n        \"age\": \"20\"\r\n    },\r\n    {\r\n        \"name\": \"Ram\",\r\n        \"job\": \"Analyst\",\r\n        \"age\":\"30\"\r\n    }\r\n]\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.expect(pm.response.code).to.eql(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/login/users/5",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"login",
						"users",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Cred",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"name\":\"Bibek\",\r\n \"job\":\"Zionist\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users/2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is in JSON format\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users/2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"BIbek\",\r\n    \"job\":\"Zionist\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users/2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "chain",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"\r",
							"var fnames = pm.environment.get('fnames').split(',');\r",
							"var lnames = pm.environment.get('lnames').split(',');\r",
							"\r",
							"var job = \" QA Intern\";\r",
							"\r",
							"var requestBody = fnames.map((fname, index) => ({\r",
							"    \"name\": fname + ' ' + lnames[index],\r",
							"    \"job\": job\r",
							"}));\r",
							"\r",
							"pm.request.body.raw = JSON.stringify(requestBody);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n{\r\n    \"name\":{{firstNames}} {{lastNames}},\r\n \r\n    \"job\":\"Software QA intern\"\r\n \r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "retrieve",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"console.log(pm.response.json().data);\r",
							"\r",
							"var firstNames = pm.response.json().data.map(el => el.first_name).join(',');\r",
							"var lastNames = pm.response.json().data.map(el => el.last_name).join(',');\r",
							"\r",
							"console.log(\"First Names:\", firstNames);\r",
							"console.log(\"Last Names:\", lastNames);\r",
							"\r",
							"pm.environment.set(\"firstNames\", firstNames);\r",
							"pm.environment.set(\"lastNames\", lastNames);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/users",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"console.log(pm.response.json().data);\r",
							" \r",
							"var respData = pm.response.json().data;\r",
							"var firstName = [];\r",
							"var LastName =[];\r",
							"respData.forEach((el)=>{\r",
							"    Object.entries(el).forEach(([key,val])=>{\r",
							"        if(key===\"first_name\"){\r",
							"            firstName.push(val);\r",
							"        console.log(`Key: ${key} Value: ${val}`);\r",
							"        }\r",
							"        if(key===\"last_name\"){\r",
							"            LastName.push(val);\r",
							"        }\r",
							"    })\r",
							"})\r",
							" \r",
							" \r",
							"let fullNames = firstName.map((firstName,index)=>{\r",
							"    return firstName+\" \"+LastName[index];\r",
							"})\r",
							" \r",
							" \r",
							"pm.environment.set(\"fullNames\",fullNames);\r",
							" \r",
							" \r",
							" \r",
							" "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/users",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var fullNames = pm.environment.get(\"fullNames\");\r",
							"let currName = fullNames.shift();\r",
							"pm.environment.set(\"CurrName\",currName);\r",
							"pm.environment.set(\"fullNames\",fullNames);\r",
							" "
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"let currName = pm.collectionVariables.get(\"CurrName\");\r",
							"let fullNames = pm.environment.get(\"fullNames\");\r",
							" \r",
							"if(fullNames && fullNames.length>0){\r",
							"    pm.sendRequest(\"POST Single User\");\r",
							" \r",
							"}\r",
							" \r",
							"pm.test(\"STATUS CREATED\", function(){\r",
							"    pm.response.to.have.status(201);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{CurrName}}\",\r\n    \"job\":\"SQA intern\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users/7",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"7"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://reqres.in/"
		},
		{
			"key": "id",
			"value": "{{id}}",
			"type": "string"
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "first_name",
			"value": ""
		},
		{
			"key": "last_name",
			"value": ""
		},
		{
			"key": "avatar",
			"value": ""
		}
	]
}